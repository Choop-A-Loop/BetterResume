{"version":3,"sources":["components/Sidebar/index.js","components/Header/index.js","components/About/index.js","components/Portfolio/Cards/index.js","components/Portfolio/index.js","components/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","className","smooth","to","Button","Component","Header","About","id","src","alt","height","useStyles","makeStyles","theme","root","maxWidth","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Cards","info","classes","React","useState","expanded","setExpanded","Card","CardHeader","title","CardMedia","image","CardContent","Typography","variant","color","component","sum","CardActions","disableSpacing","IconButton","aria-label","onClick","page","github","window","location","url","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","description","map","x","key","paragraph","Portfolio","Data","project3","project2","Contact","App","Container","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e3990ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { HashLink as Link } from 'react-router-hash-link'\n\n// material-ui\nimport Button from '@material-ui/core/Button';\n\n\nclass Sidebar extends Component {\n    render() {\n        return (\n            <div className='sidebar'>\n                <Router>\n                    <Link smooth to='/#About'>\n                        <Button>About Me</Button>\n                    </Link>\n\n                    <Link smooth to='/#Portfolio'>\n                        <Button>Portfolio</Button>\n                    </Link>\n\n                    <Link smooth to='/#Contact'>\n                        <Button>Contact Me</Button>\n                    </Link>\n\n                </Router>\n            </div>\n        );\n    }\n}\nexport default Sidebar;","import React, { Component } from 'react';\n\n// material-ui\n\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className='header'>\n                <h1>Matthew Jeffords</h1>\n            </div>\n        );\n    }\n}\nexport default Header;","import React, { Component } from 'react';\nimport './styles.css'\n\n// material-ui\n\n\nclass About extends Component {\n    render() {\n        return (\n            <div className='about-me' id='About'>\n                <h1>About Me</h1>\n                <div className='testDiv'>\n                <img src='./assets/img/HeadShot.jpeg' alt='imgae' height='400px' className='headshot'/>\n                <h2>Hi, Iâ€™m Matthew Jeffords</h2>\n                <h2>Web Designer</h2>\n                <h2>Web Developer</h2>\n                <p>\n                    I am a Junior Full Stack Web Developer, recently completing the Web Development Bootcamp at the University of Denver, where I learned languages and technologies including HTML, JavaScript, CSS, React, Node, MySQL and many others.  Check out a few recent projects on my portfolio! I am very eager to learn new languages and continue to expand my knowledge about Web Development.  My full professional resume can be found below.\n                </p>\n                </div>\n\n                <div className='aboutImage'>\n                    <img src='./assets/img/Parrot.jpeg' alt='imgae' height='250' />\n                    <img src='./assets/img/Siblings.JPG' alt='imgae' height='250px'/>            \n                    <img src='./assets/img/Basketball-after.JPG' alt='imgae' height='250px' />\n                </div>\n                \n            </div>\n        );\n    }\n}\nexport default About;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 900,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function Cards({ info }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleURLClick = () => {\n    const page = info.url\n    return window.location = page\n  }\n\n  const handleGitClick = () => {\n    const page = info.github\n    return window.location = page\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={info.title}\n      />\n      <CardMedia\n        className={classes.media}\n        image={info.image}\n        title={info.title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {info.sum}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"GitHub\" onClick={handleGitClick}>\n          <GitHubIcon />\n        </IconButton>\n        <IconButton aria-label=\"URL\" onClick={handleURLClick}>\n          <DesktopWindowsIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          {info.description.map((x, key) => {\n            return <Typography key={key} paragraph>{x}</Typography>})\n          }\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import React, { Component } from 'react';\nimport './styles.css'\nimport Data from './data.json'\nimport Grid from '@material-ui/core/Grid';\n\n\n// material-ui\nimport Cards from './Cards'\n\n\nclass Portfolio extends Component {\n    render() {\n        return (\n            <div className='portfolio' id='Portfolio'>\n                <h1>Portfolio</h1>\n                <div>\n                    <Cards info={Data.project3} />\n                    <Cards info={Data.project2} />\n                    <Cards info={Data.project2} />\n                </div>\n            </div>\n        );\n    }\n}\nexport default Portfolio;","import React, { Component } from 'react';\n\n// material-ui\n\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div className='contact' id='Contact'>\n                <h1>Contact Me</h1>\n                <div>\n                    <img src='./assets/img/resume.png' alt='imgae' height='1000px'/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Contact;","import React, { Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport './App.css';\n\n//my components\nimport Sidebar from './components/Sidebar'\nimport Header from './components/Header'\nimport About from './components/About'\nimport Portfolio from './components/Portfolio'\nimport Contact from './components/Contact'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Header />\n        <Sidebar />\n        <Container maxWidth=\"md\" className='mainContainer'>\n          <About />\n          <Portfolio />\n          <Contact />\n        </Container>\n\n      </div>\n    );\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}